name: Deploy to AWS

on:
  push:
    branches: 
      - "main"

env:
  AWS_REGION: eu-central-1
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  PRIVATE_SSH_KEY: ${{ secrets.AWS_SSH_KEY }}
  SERVER_PUBLIC_IP: ${{ secrets.AWS_PUBLIC_KEY }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Login to AWS ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      # - name: Build, push docker image
      #   env:
      #     REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     REPOSITORY: docker_compose_production
      #     IMAGE_TAG: ${{ github.sha }}
      #   run: |-
      #     docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
      #     docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
      - name: Deploy docker image to EC2
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: docker_compose_production
          IMAGE_TAG: ${{ github.sha }}
          AWS_DEFAULT_REGION: eu-central-1
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: 3.76.103.42
          username: ec2-user
          key: ${{ env.PRIVATE_SSH_KEY }}
          envs: PRIVATE_SSH_KEY,REGISTRY,REPOSITORY,IMAGE_TAG,AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY,AWS_DEFAULT_REGION,AWS_REGION
          script: |-

            ${{ env.PRIVATE_SSH_KEY }} > private_key && chmod 600 private_key
            ssh -v -o StrictHostKeyChecking=no -i private_key ec2-user@3.76.103.42 '

            cd docker_compose_production &&
            git pull origin &&
            docker compose -f docker-compose-deploy.yml build app celery celery-beat &&
            docker compose -f docker-compose-deploy.yml up --no-deps -d app celery celery-beat
            '
