version: "3.9"

services:
  app:
    build:
     context: .
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py migrate &&
             python manage.py runserver 0.0.0.0:8000"
    ports: 
      - 8000:8000
    volumes:
      - ./app:/app
      - ./data/web:/vol/web
    env_file:
      - .env
    environment:
      - SECRET_KEY=devsecretkey
      - DEBUG=1
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=changeme
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      - db

  # flask_app:
  #   build: 
  #     context: .
  #   container_name: flask_app
  #   command: gunicorn --bind 0.0.0.0:5000 app:app
  #   environment: 
  #     - DATABASE_URL=postgresql://devuser:changeme@db:5432/devdb
  #   volumes:
  #     - ./flask_app:/flask_app
  #   expose:
  #     - 5000
  #   depends_on:
  #     - db



  db:
    image: postgres:13-alpine
    environment:
      - POSTGRES_DB=devdb
      - POSTGRES_USER=devuser
      - POSTGRES_PASSWORD=changeme
  
  celery:
    restart: unless-stopped
    build: 
      context: .
    command: >
      sh -c "celery -A app.celery worker --loglevel=info --concurrency 1 -E"
    volumes:
      - ./data/web:/vol/web
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - SECRET_KEY=devsecretkey
      - DEBUG=1
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=changeme
    depends_on:
      - db
      - redis
      - app
    
  celery-beat:
    restart: unless-stopped
    build: 
      context: .
    command: >
      sh -c "celery -A app beat -l INFO"
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - SECRET_KEY=devsecretkey
      - DEBUG=1
      - DB_HOST=db
      - DB_NAME=devdb
      - DB_USER=devuser
      - DB_PASS=changeme
    depends_on:
      - db
      - redis
      - app

  redis:
    restart: unless-stopped
    image: redis:7.0.5-alpine
    expose:
      - 6379
    depends_on:
      - db
  
  